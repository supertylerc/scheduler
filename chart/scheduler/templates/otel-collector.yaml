{{- if .values.otel.enabled }}
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: {{ include "scheduler.fullname" . }}
spec:
  mode: statefulset
  targetAllocator:
    image: ghcr.io/open-telemetry/opentelemetry-operator/target-allocator
    enabled: true
    serviceAccount: otel-collector
    prometheusCR:
      enabled: true
      serviceMonitorSelector:
        app.kubernetes.io/instance: scheduler
        app.kubernetes.io/name: scheduler
  config: |
    receivers:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 30s
            static_configs:
            - targets: [ '0.0.0.0:8888' ]
        target_allocator:
          endpoint: http://scheduler-targetallocator
          interval: 30s
          collector_id: "${POD_NAME}"
    processors:
      batch:
        send_batch_size: 10000
        timeout: 10s
    exporters:
{{- if .Values.otel.prometheus.enabled }}
      prometheusremotewrite:
        endpoint: {{ .Values.otel.prometheus.endpoint }}
{{ end }}
    service:
      pipelines:
{{- if .Values.otel.prometheus.enabled }}
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [prometheusremotewrite]
{{ end }}
{{ end }}
